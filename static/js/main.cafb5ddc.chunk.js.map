{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","orderMethod","setOrderMethod","isReversed","setIsReversed","orderedGoods","goods","orderedMethod","finalGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getOrderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAsCC,mBAASH,EAASI,SAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA9BR,SACEC,EACAC,EACAJ,GAEA,IAAMK,EAAU,YAAOF,GAEvB,OAAQC,GACN,KAAKX,EAASa,SACZD,EAAWE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACtD,MAEF,KAAKhB,EAASkB,OACZN,EAAWE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAW3D,OAJIZ,GACFK,EAAWQ,UAGNR,EAMcS,CACnBpB,EACAI,EACAE,GAGF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAgBL,EAASa,WAEvCY,QAAS,kBAAMnB,EAAeN,EAASa,WALzC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAgBL,EAASkB,SAEvCO,QAAS,kBAAMnB,EAAeN,EAASkB,SALzC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAajB,IAEfkB,QAAS,kBAAMjB,GAAeD,IALhC,sBAUEF,GAAeE,IACf,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,EAAeN,EAASI,SAAUI,GAAc,IAJpD,sBAYJ,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cafb5ddc.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  DEFAULT = '',\n}\n\nfunction getOrderedGoods(\n  goods: string[],\n  orderedMethod: SortType,\n  isReversed: boolean,\n) {\n  const finalGoods = [...goods];\n\n  switch (orderedMethod) {\n    case SortType.ALPHABET:\n      finalGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      finalGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    finalGoods.reverse();\n  }\n\n  return finalGoods;\n}\n\nexport const App: React.FC = () => {\n  const [orderMethod, setOrderMethod] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const orderedGoods = getOrderedGoods(\n    goodsFromServer,\n    orderMethod,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': orderMethod !== SortType.ALPHABET,\n          })}\n          onClick={() => setOrderMethod(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': orderMethod !== SortType.LENGTH,\n          })}\n          onClick={() => setOrderMethod(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(orderMethod || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setOrderMethod(SortType.DEFAULT); setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {orderedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}